on:
  workflow_call:
    inputs:
      upload:
        required: false
        type: string
        default: 'false'
    secrets:
      MAPBOX_DOWNLOADS_TOKEN:
        required: true
      PUBLIC_MAPBOX_TOKEN:
        required: false
      IOS_P12_BASE64:
        required: true
      IOS_MOBILE_PROVISION_BASE64:
        required: true
      IOS_TEAM_ID:
        required: true
      IOS_CERTIFICATE_PASSWORD:
        required: true
      APPLE_ISSUER_ID:
        required: false
      APPLE_KEY_ID:
        required: false
      APPLE_PRIVATE_KEY:
        required: false
      GOOGLE_OAUTH_IOS_CLIENT_ID:
        required: false
      GOOGLE_OAUTH_IOS_URI_SCHEME:
        required: false
      MICROSOFT_OAUTH_CLIENT_ID:
        required: false
      MICROSOFT_SIGNATURE_HASH:
        required: false
      SENTRY_DSN:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false

jobs:
  ios-build:
    name: iOS Build
    runs-on: macos-14
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DISABLE_AUTO_UPLOAD: ${{ inputs.upload == 'false' && 'true' || 'false' }}

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Enable build cache
        uses: mikehardy/buildcache-action@v2

      - name: Provide Mapbox secret key
        run: |
          echo "machine api.mapbox.com" >> $HOME/.netrc
          echo "login mapbox" >> $HOME/.netrc
          echo "password ${{ secrets.MAPBOX_DOWNLOADS_TOKEN }}" >> $HOME/.netrc
          chmod 600 $HOME/.netrc

      - name: Set up config values
        if: ${{ inputs.upload == 'true' }}
        working-directory: ./dev-client
        run: |
          echo "GOOGLE_OAUTH_IOS_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_IOS_CLIENT_ID }}" >> .env
          echo "GOOGLE_OAUTH_IOS_URI_SCHEME=${{ secrets.GOOGLE_OAUTH_IOS_URI_SCHEME }}" >> .env
          echo "MICROSOFT_OAUTH_CLIENT_ID=${{ secrets.MICROSOFT_OAUTH_CLIENT_ID }}" >> .env
          echo "MICROSOFT_SIGNATURE_HASH=${{ secrets.MICROSOFT_SIGNATURE_HASH }}" >> .env
          echo "PUBLIC_MAPBOX_TOKEN=${{ secrets.PUBLIC_MAPBOX_TOKEN }}" >> .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "ENV=staging" >> .env
          cp sentry.properties.example ./ios/sentry.properties
          echo "auth.token=${{ secrets.SENTRY_AUTH_TOKEN }}" >> ./ios/sentry.properties

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: dev-client/package-lock.json

      - name: Install Node dependencies
        working-directory: dev-client
        run: npm ci

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: dev-client

      - name: Restore Pods cache
        uses: actions/cache@v4
        with:
          path: dev-client/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: CocoaPod Install
        working-directory: dev-client/ios
        run: bundle exec pod install

      - name: Build iOS App
        uses: yukiarrr/ios-build-action@v1.11.2
        with:
          project-path: dev-client/ios/TerrasoLandPKS.xcodeproj
          p12-base64: ${{ secrets.IOS_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: 'iPhone Distribution'
          team-id: ${{ secrets.IOS_TEAM_ID }}
          certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          workspace-path: dev-client/ios/TerrasoLandPKS.xcworkspace
          scheme: TerrasoLandPKS
          increment-build-number: ${{ inputs.upload == 'true' && 'true' || '' }}

      - name: Archive build log and intermediates
        if: "!success()"
        uses: actions/upload-artifact@v3
        with:
          name: dist-log-intermediates
          path: |
            "/Users/runner/Library/Logs/gym/Terraso LandPKS-Terraso LandPKS.log"
            "/Users/runner/Library/Developer/Xcode/DerivedData/TerrasoLandPKS-*/Build/Intermediates.noindex/ArchiveIntermediates/"

      # - name: Commit iOS version bump
      #   if: ${{ inputs.upload == 'true' }}
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     file_pattern: "dev-client/ios"
      #     commit_message: "build: bump iOS version number"
      #     commit_user_name: "GitHub Actions"
      #     commit_user_email: actions@users.noreply.github.com

      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        if: ${{ inputs.upload == 'true' }}
        with:
          app-path: 'output.ipa'
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_PRIVATE_KEY }}
