/*
 * Copyright Â© 2024 Technology Matters
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see https://www.gnu.org/licenses/.
 */

import {
  ColorChroma,
  ColorHueSubstep,
  ColorValue,
  SoilColorHue,
} from 'terraso-client-shared/soilId/soilIdTypes';

/* this was originally nested objects, which was easier to read, but apparently
 * Object.entries converts number keys to strings so it was causing issues
 */

export const SOIL_COLORS: Record<
  SoilColorHue,
  [ColorHueSubstep | 0, [ColorValue, (ColorChroma | 0)[]][]][]
> = {
  R: [
    [
      5,
      [
        [2.5, [1, 2, 3, 4, 6]],
        [3, [1, 2, 3, 4, 6, 8]],
        [4, [1, 2, 3, 4, 6, 8]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4]],
      ],
    ],
    [
      7.5,
      [
        [2.5, [1, 2, 3, 4]],
        [3, [1, 2, 3, 4, 6, 8]],
        [4, [1, 2, 3, 4, 6, 8]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4]],
      ],
    ],
    [
      10,
      [
        [2.5, [1, 2]],
        [3, [1, 2, 3, 4, 6]],
        [4, [1, 2, 3, 4, 6, 8]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4]],
      ],
    ],
  ],
  YR: [
    [
      2.5,
      [
        [2.5, [1, 2, 3, 4]],
        [3, [1, 2, 3, 4, 6]],
        [4, [1, 2, 3, 4, 6, 8]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4]],
      ],
    ],
    [
      5,
      [
        [2.5, [1, 2]],
        [3, [1, 2, 3, 4]],
        [4, [1, 2, 3, 4, 6]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4]],
      ],
    ],
    [
      7.5,
      [
        [2.5, [1, 2, 3]],
        [3, [1, 2, 3, 4]],
        [4, [1, 2, 3, 4, 6]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4, 6]],
        [8.5, [1, 2]],
        [9, [1, 2]],
        [9.5, [1, 2]],
      ],
    ],
    [
      10,
      [
        [2, [1, 2]],
        [3, [1, 2, 3, 4, 6]],
        [4, [1, 2, 3, 4, 6]],
        [5, [1, 2, 3, 4, 6, 8]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4, 6, 8]],
        [8.5, [1, 2]],
        [9, [1, 2]],
        [9.5, [1, 2]],
      ],
    ],
  ],
  Y: [
    [
      2.5,
      [
        [2.5, [1]],
        [3, [1, 2, 3]],
        [4, [1, 2, 3, 4]],
        [5, [1, 2, 3, 4, 6]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4, 6, 8]],
        [8.5, [1, 2]],
        [9, [1, 2]],
        [9.5, [1, 2]],
      ],
    ],
    [
      5,
      [
        [2.5, [1, 2]],
        [3, [1, 2]],
        [4, [1, 2, 3, 4]],
        [5, [1, 2, 3, 4, 6]],
        [6, [1, 2, 3, 4, 6, 8]],
        [7, [1, 2, 3, 4, 6, 8]],
        [8, [1, 2, 3, 4, 6, 8]],
      ],
    ],
    [
      10,
      [
        [2.5, [1]],
        [3, [1, 2, 4]],
        [4, [1, 2, 4]],
        [5, [1, 2, 4]],
        [6, [1, 2, 4]],
        [7, [1]],
        [8, [1]],
      ],
    ],
  ],
  GY: [
    [
      5,
      [
        [2.5, [1]],
        [3, [1, 2, 4]],
        [4, [1, 2, 4]],
        [5, [1, 2, 4]],
        [6, [1, 2, 4]],
        [7, [1]],
        [8, [1]],
      ],
    ],
    [
      10,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
  ],
  G: [
    [
      5,
      [
        [2.5, [1, 2]],
        [3, [1, 2]],
        [4, [1, 2]],
        [5, [1, 2]],
        [6, [1, 2]],
        [7, [1, 2]],
        [8, [1, 2]],
      ],
    ],
    [
      10,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
  ],
  BG: [
    [
      5,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
    [
      10,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
  ],
  B: [
    [
      5,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
    [
      10,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
  ],
  PB: [
    [
      5,
      [
        [2.5, [1]],
        [3, [1]],
        [4, [1]],
        [5, [1]],
        [6, [1]],
        [7, [1]],
        [8, [1]],
      ],
    ],
  ],
  N: [
    [
      0,
      [
        [2.5, [0]],
        [3, [0]],
        [4, [0]],
        [5, [0]],
        [6, [0]],
        [7, [0]],
        [8, [0]],
        [8.5, [0]],
        [9, [0]],
        [9.5, [0]],
      ],
    ],
  ],
} as const;
